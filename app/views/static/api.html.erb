<h1>API</h1>

<p>Get the data you want simply by constructing your URLs as follows:</p>
<h3>Return data for a postcode</h3>

<pre>http://uk-postcodes.com/postcode/<strong>[postcode (no space)]</strong>.<strong>['xml', 'csv', 'json'* or 'rdf']</strong></pre>

<h3>Return data for the nearest postcode to a point</h3>

<pre>http://uk-postcodes.com/latlng/<strong>[latitude]</strong>,<strong>[longitude]</strong>.<strong>['xml', 'csv', 'json'* or 'rdf']</strong></pre>

<h3>Return data for postcodes within x distance (miles) of a postcode or lat/lng</h3>

<pre>http://uk-postcodes.com/postcode/nearest?<strong>postcode=[postcode]</strong>&amp;<strong>miles=[distance in miles]</strong>&amp;<strong>format=[xml|csv|json]</strong></pre>

<pre>http://uk-postcodes.com/postcode/nearest?<strong>lat=[latitude]</strong>&amp;<strong>lng=[longitude]</strong>&amp;<strong>miles=[distance in miles (up to a maximum of 5 miles)]</strong>&amp;<strong>format=[xml|csv|json]</strong></pre>

<p>That's it! Be nice to the server and cache your requests!</p>
<p><small>* If using JSON, add '?callback=<strong>[some function call]</strong>' to the url to return JSONP</small></p>

<h2 id="libraries">Helper Libraries</h2>

<p>To make things even easier, a bunch of people have built helper libraries to make the process easier. Built one yourself? <a href="http://twitter.com/pezholio">Drop me a line via Twitter</a>.</p>

<ul>
<li><a href="https://github.com/stefl/pat">Ruby Gem</a> (cleverly called Pat) By <a href="http://stef.io">Stef Lewandowski</a></li>
<li><a href="http://gist.github.com/364477">PHP Function</a> by <a href="http://www.pezholio.co.uk">Stuart Harrison</a></li>
<li><a href="https://postcodes.readthedocs.org/en/latest/">Python Client</a> by <a href="http://about.me/eddrobinson">Edd Robinson</a></li>
</ul>